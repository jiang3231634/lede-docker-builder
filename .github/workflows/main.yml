# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
#clone docker and build image
git clone https://github.com/hanxi/lede-docker-builder.git
cd lede-docker-builder
docker build -t lede .
#run container and clone lede code
docker run --rm -it -v $(pwd)/../data:/workdir lede
git clone --depth 1 https://github.com/coolsnowwolf/lede -b master openwrt

cd openwrt
../diy-part1.sh
./scripts/feeds update -a 
./scripts/feeds install -a
../diy-part2.sh

cp ../.config .
make menuconfig 

#Download package
make defconfig
make download -j8
find dl -size -1024c -exec ls -l {} \;
find dl -size -1024c -exec rm -f {} \;

# First Compile the firmware
make -j1 V=s

# Second Compile the firmware
make -j$(($(nproc) + 1))
